name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, llvm-tools
    - run: cargo install cargo-binutils
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run Build
      run: cargo strip --release --verbose
    - name: Get package version
      id: cargo-version
      uses: nicolaiunrein/cargo-get@master
      with:
        subcommand: package.version
    - name: Print package metadata
      run: |
        echo "metadata=${{ steps.cargo-version.outputs.metadata }}"
  #   - name: Create Draft Release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: 0.1.0
  #       release_name: 0.1.0
  #       draft: true
  #       prerelease: false

  #   - uses: actions/upload-release-asset@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}
  #       asset_path: ./target/release/uuid
  #       asset_name: uuid
  #       asset_content_type: application/octet-stream
  #   - uses: eregon/publish-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       release_id: ${{ steps.create_release.outputs.id }}
  # windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build
  #     run: cargo build --verbose
  #   - name: Run tests
  #     run: cargo test --verbose
  #   - name: Run Build
  #     run: cargo build --release --verbose
  #   - name: Create Draft Release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: 0.1.0
  #       release_name: 0.1.0
  #       draft: true
  #       prerelease: false

  #   - uses: actions/upload-release-asset@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}
  #       asset_path: ./target/release/uuid.exe
  #       asset_name: uuid.exe
  #       asset_content_type: application/octet-stream
  #   - uses: eregon/publish-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       release_id: ${{ steps.create_release.outputs.id }}
